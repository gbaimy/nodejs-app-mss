name: CI/CD Pipeline for MSS

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  sonarcloud_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install unzip
        run: sudo apt-get install -y unzip 

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.4

      - name: Install Dependencies
        run: |
          npm install
      
      - name: Install SonarScanner
        run: |
          wget -qO- https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip -O /tmp/sonar-scanner.zip
          unzip /tmp/sonar-scanner.zip -d /tmp
          echo "/tmp/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=mss-project \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://52.87.175.60:9000\
            -Dsonar.login=$SONAR_TOKEN
          
      - name: Create .tgz file
        run: |
         mkdir -p temp
          rsync -av --exclude=temp ./ temp/
          tar -czf my-project.tgz -C temp .
          echo "Generated .tgz file: $(pwd)/my-project.tgz"
          
      - name: Verify .tgz file
        run: |
         if [ -f my-project.tgz ]; then
            echo "Packaging successful: $(pwd)/my-project.tgz"
          else
            echo "Error: .tgz file not found!"
            exit 1
          fi
          
      - name: Create artifact directory
        run: |
          mkdir -p my-artifact
          echo "Created directory: $(pwd)/my-artifact"
          
      - name: Move .tgz file to artifact directory
        run: |
          mv my-project.tgz my-artifact/
          echo "Moved artifact to: $(pwd)/my-artifact/my-project.tgz"

      - name: Find .tgz file
        id: find-tgz
        run: |
          TGZ_FILE=$(find . -name "*.tgz" | head -n 1)
          if [ -z "$TGZ_FILE" ]; then
          echo "Error: No .tgz file found!"
          exit 1
          fi
          echo "Found artifact: $TGZ_FILE"
          echo "artifact_path=$TGZ_FILE" >> $GITHUB_ENV

      - name: Upload Node.js Artifact to Nexus
        env:
         artifact_path: ${{ env.artifact_path }}
         NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
         NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
         NEXUS_URL: ${{ secrets.NEXUS_URL }}
        run: |
          curl -u $NEXUS_USERNAME:$NEXUS_PASSWORD \ --upload-file "$artifact_path" \ "$NEXUS_URL/repository/MSS-NPM-PROJECT/$(basename $artifact_path)"

      - name: Run Application and Validate
        run: |
         echo "Starting the application..."
         node app.js &  
         APP_PID=$!    
 
     

