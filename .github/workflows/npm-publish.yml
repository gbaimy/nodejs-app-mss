name: CI/CD Pipeline for MSS

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  sonarcloud_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install unzip
        run: sudo apt-get install -y unzip 

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.4

      - name: Install Dependencies
        run: |
          npm install
      
      - name: Install SonarScanner
        run: |
          wget -qO- https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip -O /tmp/sonar-scanner.zip
          unzip /tmp/sonar-scanner.zip -d /tmp
          echo "/tmp/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=mss-project \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://54.226.144.119:9000\
            -Dsonar.login=$SONAR_TOKEN
            
      - name: Prepare files for packaging
        run: |
         mkdir temp
         cp -r ./* temp2/
         echo "All files copied to temporary directory."
         
      - name: Create .tgz file
        run: |
         tar -czf my-project.tgz -C temp .
         echo "Generated artifact: $(pwd)/my-project.tgz"
          
      - name: Verify .tgz file
        run: |
         ARTIFACT_DIR="."
         ARTIFACT=$(ls $ARTIFACT_DIR/*.tgz 2>/dev/null || echo "")
         if [ -z "$ARTIFACT" ]; then
          echo "Error: No .tgz file found in $ARTIFACT_DIR. Please check the build process."
          exit 1
         fi
         echo "Found artifact: $ARTIFACT"
         
      - name: Upload Node.js Artifact to Nexus
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
        run: |
         curl -u $NEXUS_USERNAME:$NEXUS_PASSWORD --upload-file "$ARTIFACT" "$NEXUS_URL/repository/nodejs-app-mss/$(basename $ARTIFACT)"
         echo "Upload complete."
      
      - name: Run Node.js App
        run: |
          npm start
